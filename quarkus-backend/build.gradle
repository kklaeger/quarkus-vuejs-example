buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.diffplug.spotless:spotless-plugin-gradle:3.27.1'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.jetbrains.kotlin.plugin.allopen' version '1.3.72'
    id 'io.quarkus'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.3.72'
    id 'com.diffplug.gradle.spotless' version '3.27.1'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'io.quarkus:quarkus-kotlin'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache-kotlin'
    implementation 'io.quarkus:quarkus-jdbc-h2'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:kotlin-extensions'

    testCompile 'io.mockk:mockk:1.10.0'
    testCompile 'org.assertj:assertj-core:3.16.1'
}

group 'org.example'
version '1.0.0-SNAPSHOT'

quarkus {
    setOutputDirectory("$projectDir/build/classes/kotlin/main")
}

quarkusDev {
    setSourceDir("$projectDir/src/main/kotlin")
}

allOpen {
    annotation("javax.ws.rs.Path")
    annotation("javax.enterprise.context.ApplicationScoped")
    annotation("io.quarkus.test.junit.QuarkusTest")
}

noArg {
    annotation("javax.persistence.Entity")
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
    kotlinOptions.javaParameters = true
}

compileTestKotlin {
    kotlinOptions.jvmTarget = JavaVersion.VERSION_11
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

spotless {
    kotlin {
        ktlint()
    }
}

task unitTest(type: Test) {
    useJUnitPlatform() { includeTags 'unit-test' }
    testLogging { events "skipped", "failed" }
}

task integrationTest(type: Test) {
    useJUnitPlatform() { includeTags 'integration-test' }
    testLogging { events "skipped", "failed" }
}

tasks.named("check") {
    dependsOn.clear()
    dependsOn(":integrationTest")
    dependsOn(":unitTest")
    dependsOn(":spotlessCheck")
}